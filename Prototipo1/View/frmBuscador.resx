<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PanelTituloError.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAATU0AKgAAAAgAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCAATAX8DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3f7HbZ/49of8AvgUf
        Y7X/AJ94f++BVjvRQBX+x2v/AD7w/wDfAo+x2v8Az7w/98CrFFAEH2O1/wCfeH/vgUfY7X/n3h/74FT0
        UAV/sdr/AM+8P/fAo+x2v/PvD/3wKsUUAV/sdr/z7w/98Cj7Ha/8+8P/AHwKsUUAV/sdr/z7w/8AfAo+
        x2v/AD7w/wDfAqxRQBX+x2v/AD7w/wDfAo+x2v8Az7w/98CrFFAFf7Ha/wDPvD/3wKPsdr/z7w/98CrF
        FAFf7Ha/8+8P/fAo+x2v/PvD/wB8CrFFAFf7Ha/8+8P/AHwKPsdr/wA+8P8A3wKsUUAV/sdr/wA+8P8A
        3wKPsdr/AM+8P/fAqxRQBX+x2v8Az7w/98Cj7Ha/8+8P/fAqxRQBX+x2v/PvD/3wKPsdr/z7w/8AfAqx
        RQBX+x2v/PvD/wB8Cj7Ha/8APvD/AN8CrFFAFf7Ha/8APvD/AN8Cj7Ha/wDPvD/3wKsUUAV/sdr/AM+0
        P/fApr2lsOltD/3wKtVHJQBSa2twf+PaH/v2tV3t4M/8e8OP+uY/wq6e9V25brVokoyQW4yBbQf9+l/w
        qlPBBnH2eHv/AMsxz+laMvJznvVKb73WrgRIz5YIMg/ZoTj/AKZr/nFUZreAZHkQ4/65LWjN949PrVKf
        oc9P510wSMpGZLDCucwRY/65D/CqzQwDk28A9D5Yq5IxBJznA7dqqvwvfg+tbJIzvqVWt4AjEQRcY/5Z
        iojDCdy+VFlTgfIKsOeMfwg+lV34bcemTjitYpCZCY0GV8qP0PyChoYtvEMefXaKkYfNknAP60hBIODk
        Dk1XKuwrjRBEwAMSH32immCLcMwxnHI3KKkUjnOc9RQTzgkjHvRyoLkZhh5/cR8+igUrRwZ3CFM+uwGn
        4DcAZNNIP5UWQDf+FheKQ2P7U74/494vX/dprfELxSEyNU5+X/l3i/8AiaKK8HqegQv8RvFgY41Xv/z7
        xf8AxNCfEbxYd2dV6D/n3i/+JooqgHr8RPFRdgdV4H/TvF6H/Zp4+IfikqCdU/8AJeL1H+zRRSkCIx8R
        fFWwf8TX0/5d4vT/AHadJ8RPFQZ8ar0P/PvF7f7NFFJAK3xE8VYH/E17H/l3i9f92gfEPxTuA/tTu3/L
        vF6/7tFFNjQ1fiJ4qKx51XrnP+jxf/E01viL4rA/5Cv8Kn/j3i9/9miiiImJ/wALG8V7yP7V4x/z7xf/
        ABNPHxF8VEHOq/8AkvF7f7NFFNiGj4i+KsSH+1ejED/R4vb/AGacPiJ4q3kf2rxz/wAu8Xr/ALtFFJ7j
        EPxF8VYf/ia9B/z7xf8AxNIfiL4ryf8Aia9j/wAu8Xp/u0UVXQSEPxG8VgH/AImvZf8Al3i9R/s1J/ws
        TxUZGH9qcf8AXvF7/wCzRRR0AcvxD8UkLnVOv/TvF7f7NIfiJ4qGP+Jp3/594v8A4miioGKvxE8VHP8A
        xNO//PvF6f7tMHxF8V+UD/avOD/y7xev+7RRQBJ/wsPxTvx/anH/AF7xeh/2aQ/EPxTgf8TTrn/l3i9/
        9miigBrfETxV5ef7V5wf+XeL2/2aG+InioOR/av/AJLxe3+zRRQA0/EXxXvUf2rwW/594v8A4mnL8RPF
        Rcj+1f8AyXi9/wDZooquguoj/ETxUAuNV/u/8u8XqP8AZpw+IXiknB1TuP8Al3i9P92iijoMhl+Ifilc
        41Mfw/8ALtF7/wCzUB+I3ion/kJr0/59Yf8A4iiihiFX4g+J3bnUV7/8usPt/s1JJ448RMeb9eT/AM+0
        X/xNFFUhPYg/4TPX34a9U/8AbvH/APE1C/i3W2zm8X/vxH6/7tFFbRZm9iJfE+sNI2bsd/8Alin+FMHi
        PVef9JHQf8sk/wAKKK1bZCSGjXtTJObgf9+1/wAKSTXNR3D/AEgdP+ea/wCFFFNydtxJIh/t3UTOB54+
        7/zzT/Cnf23qBd8zjv8A8s19PpRRVuUtNSUkL/beoeWh88ZCf881/wAKBrWoMATOCc/881/woopczvuO
        yIzreoq2RcAEHj92vqPapDrmo+Z/x8Dp/wA819fpRRVybUWK2p//2Q==
</value>
  </data>
</root>